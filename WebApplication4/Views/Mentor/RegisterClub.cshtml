@model WebApplication4.Models.CLUB

@{
    Layout = "~/Views/Shared/_MentorLayout.cshtml";
    ViewBag.Title = "Register a Club";
}

<style>
    /* Form Styling */
    .form-control {
        position: relative;
        border: 1px solid #ced4da;
        transition: border-color 0.3s, box-shadow 0.3s;
    }

        .form-control:focus {
            border-color: #007bff;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.3);
        }

        .form-control.is-valid {
            border-color: #ced4da;
            background-image: none;
        }

            .form-control.is-valid:focus {
                border-color: #007bff;
                box-shadow: 0 0 5px rgba(0, 123, 255, 0.3);
            }

        .form-control.is-invalid {
            border-color: #dc3545;
            background-image: none;
        }

            .form-control.is-invalid::after {
                content: "\f06a";
                font-family: "Font Awesome 6 Free";
                font-weight: 900;
                color: #dc3545;
                position: absolute;
                right: 10px;
                top: 50%;
                transform: translateY(-50%);
                font-size: 14px;
            }

            .form-control.is-invalid:focus {
                box-shadow: 0 0 5px rgba(220, 53, 69, 0.5);
            }

    .invalid-feedback {
        font-size: 0.85rem;
        font-style: italic;
        color: #dc3545;
        opacity: 0;
        transition: opacity 0.3s ease-in-out;
    }

    .was-validated .invalid-feedback,
    .form-control.is-invalid ~ .invalid-feedback {
        opacity: 1;
    }

    .form-control[type="file"].is-invalid::after {
        top: 50%;
        right: 10px;
    }

    .card {
        border: none;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .btn-primary {
        background-color: #007bff;
        border: none;
        transition: background-color 0.3s;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .alert {
        border-radius: 8px;
        padding: 10px;
        opacity: 0.9;
        transition: opacity 0.3s;
    }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
    }
</style>

<div class="container mt-2">
    <h2 class="text-center mb-3">Register a Club</h2>

    @if (!string.IsNullOrEmpty(ViewBag.SuccessMessage))
    {
        <div class="alert alert-success text-center py-2 mb-3">@ViewBag.SuccessMessage</div>
    }

    @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
    {
        <div class="alert alert-danger text-center py-2 mb-3">@ViewBag.ErrorMessage</div>
    }

    <div class="card shadow-sm p-3">
        @using (Html.BeginForm("RegisterClub", "Mentor", FormMethod.Post, new { @class = "needs-validation", novalidate = "true", enctype = "multipart/form-data", id = "clubForm" }))
        {
            <div class="row g-3">
                <!-- Left Column -->
                <div class="col-md-6">
                    <div class="mb-2">
                        <label for="ClubName" class="form-label">Club Name</label>
                        @Html.TextBoxFor(m => m.ClubName, new { @class = "form-control", required = "required", maxlength = "100", id = "ClubName" })
                        <div class="invalid-feedback">Club Name is required (max 100 characters).</div>
                    </div>

                    <div class="mb-2">
                        <label for="Abbreviation" class="form-label">Abbreviation</label>
                        @Html.TextBoxFor(m => m.Abbreviation, new { @class = "form-control", required = "required", maxlength = "10", id = "Abbreviation" })
                        <div class="invalid-feedback">Abbreviation is required (max 10 characters).</div>
                    </div>

                    <div class="mb-2">
                        <label for="Description" class="form-label">Description</label>
                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = 3, required = "required", maxlength = "5000", id = "Description" })
                        <div class="invalid-feedback">Description is required (max 5000 characters).</div>
                    </div>
                </div>

                <!-- Right Column -->
                <div class="col-md-6">
                    <div class="mb-2">
                        <label for="ClubEmail" class="form-label">Club Email</label>
                        <input type="email" name="ClubEmail" id="ClubEmail" class="form-control" placeholder="Enter Club Email" required />
                        <div class="invalid-feedback">Valid Club Email is required.</div>
                        <small class="text-muted">This email will be used for club admin login. Default password: clubadmin@123</small>
                    </div>

                    <div class="mb-2">
                        <label for="LogoImage" class="form-label">Club Logo</label>
                        <input type="file" name="LogoImage" id="LogoImage" class="form-control" accept="image/jpeg,image/png,image/gif" required="required" />
                        <div class="invalid-feedback" id="logoImageError">Club Logo is required.</div>
                    </div>

                    <div class="mb-2">
                        <label class="form-label">Department</label>
                        <input type="text" class="form-control" value="@ViewBag.DepartmentName" readonly />
                        @Html.HiddenFor(m => m.DepartmentID, new { @required = "required", id = "DepartmentID" })
                        <div class="invalid-feedback">Department is required.</div>
                    </div>
                </div>
            </div>

            <div class="text-center mt-3">
                <button type="submit" class="btn btn-primary"><i class="fas fa-paper-plane"></i> Request Club</button>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            const form = $("#clubForm");

            function validateTextInput(field, maxLength, fieldName) {
                const value = field.val().trim();
                const feedback = field.next(".invalid-feedback");
                field.removeClass("is-invalid");

                if (!value) {
                    feedback.text(fieldName + " is required.");
                    field.addClass("is-invalid");
                    return false;
                } else if (value.length > maxLength) {
                    feedback.text(`${fieldName} cannot exceed ${maxLength} characters.`);
                    field.addClass("is-invalid");
                    return false;
                } else {
                    feedback.text("");
                    return true;
                }
            }

            function validateEmail(field) {
                const value = field.val().trim();
                const feedback = field.next(".invalid-feedback");
                field.removeClass("is-invalid");
                const emailPattern = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
                if (!value) {
                    feedback.text("Club Email is required.");
                    field.addClass("is-invalid");
                    return false;
                } else if (!emailPattern.test(value)) {
                    feedback.text("Please enter a valid email address.");
                    field.addClass("is-invalid");
                    return false;
                } else {
                    feedback.text("");
                    return true;
                }
            }

            function validateField(field) {
                const id = field.attr("id");
                if (id === "ClubName") {
                    return validateTextInput(field, 100, "Club Name");
                } else if (id === "Abbreviation") {
                    return validateTextInput(field, 10, "Abbreviation");
                } else if (id === "Description") {
                    return validateTextInput(field, 5000, "Description");
                } else if (id === "ClubEmail") {
                    return validateEmail(field);
                }
                return true;
            }

            $("#ClubName, #Abbreviation, #Description, #ClubEmail").on("input blur", function () {
                validateField($(this));
            });

            form.on("submit", function (e) {
                let isValid = true;
                ["#ClubName", "#Abbreviation", "#Description", "#ClubEmail"].forEach(selector => {
                    if (!validateField($(selector))) {
                        isValid = false;
                    }
                });

                if (!isValid) {
                    e.preventDefault();
                    form.addClass("was-validated");
                }
            });
        });
    </script>
}

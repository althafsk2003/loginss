@model IPagedList<WebApplication4.Models.CLUB>
@using PagedList;
@using PagedList.Mvc;

@{
    Layout = "~/Views/Shared/_MentorLayout.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>View Club Status</title>

    <!-- Styling for Status Labels -->
    <style>
        .status-approved {
            color: white;
            background-color: green;
            padding: 5px 10px;
            border-radius: 5px;
        }

        .status-pending {
            color: white;
            background-color: orange;
            padding: 5px 10px;
            border-radius: 5px;
        }

        .status-rejected {
            color: white;
            background-color: red;
            padding: 5px 10px;
            border-radius: 5px;
        }

        .reason-col {
            display: none;
        }

        /* Pagination & Table Styles */
        .table-responsive {
            overflow-x: auto;
            width: 125%;
            margin-left:-140px;
        }

        .table {
            width: 100%;
            table-layout: fixed;
            word-wrap: break-word;
        }

        .pagination-container {
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            margin-top: 10px;
        }

        .pagination-info {
            font-size: 14px;
            color: #6c757d;
            margin-bottom: 5px;
        }

        .pagination {
            display: flex;
            list-style: none;
            padding: 0;
            gap: 5px;
        }

        .page-item {
            margin: 0 3px;
        }

        .page-link {
            display: block;
            padding: 8px 12px;
            border-radius: 50%;
            background-color: #e0e0e0;
            color: black;
            text-decoration: none;
            font-weight: bold;
        }

        .page-item.active .page-link {
            background-color: #007bff;
            color: white;
        }

        .short-desc,
        .full-desc {
            display: inline;
        }

        .read-more-toggle {
            color: #007bff;
            cursor: pointer;
            text-decoration: auto;
            margin-left: 5px;
            font-size: 0.9em;
        }

        .d-none {
            display: none;
        }
    </style>
</head>
<body>
    <div class="container mt-4">
        <h2 class="text-center mb-4">Club Status</h2>

        <!-- Filter Buttons -->
        <div class="text-center mb-4">
            <button class="btn btn-warning btn-filter @(ViewBag.Filter == "pending" ? "active" : "")" onclick="filterTable('pending')">Pending Requests</button>
            <button class="btn btn-success btn-filter @(ViewBag.Filter == "approved" ? "active" : "")" onclick="filterTable('approved')">Approved Requests</button>
            <button class="btn btn-danger btn-filter @(ViewBag.Filter == "rejected" ? "active" : "")" onclick="filterTable('rejected')">Rejected Requests</button>
            <button class="btn btn-primary btn-filter @(ViewBag.Filter == "all" ? "active" : "")" onclick="filterTable('all')">View All Requests</button>
        </div>

        <!-- Club Status Table -->
        <div class="table-responsive">
            <table class="table club-table mt-3">
                <thead class="thead-dark">
                    <tr>
                        <th>Club Name</th>
                        <th>Description</th>
                        <th>University</th>
                        <th>Department</th>
                        <th>Status</th>
                        <th>Total Slots</th>
                        <th>Available Slots</th>
                        <th class="reason-col">Rejection Reason</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var notifications = ViewBag.Notifications as List<WebApplication4.Models.Notification>;
                    }

                    @foreach (var club in Model)
                    {
                        var mentorID = (int?)club.MentorID;
                        var notification = notifications?.FirstOrDefault(n => n.LoginID == mentorID);

                        string rejectionReason = "";
                        if (club.ApprovalStatusID == 3 && notification != null)
                        {
                            var reasonParts = notification.Message.Split(new string[] { "Reason: " }, StringSplitOptions.None);
                            if (reasonParts.Length > 1)
                            {
                                rejectionReason = reasonParts[1];
                            }
                        }

                        <tr class="club-row" data-status="@club.ApprovalStatusID">
                            <td>@club.ClubName</td>
                            <td>
                                <span class="short-desc">
                                    @club.Description.Substring(0, Math.Min(50, club.Description.Length))@((club.Description.Length > 50) ? "..." : "")
                                </span>
                                @if (club.Description.Length > 50)
                                {
                                    <span class="full-desc d-none">@club.Description</span>
                                    <a href="#" class="read-more-toggle">Read more</a>
                                }
                            </td>
                            <td>@club.DEPARTMENT.UNIVERSITY.UniversityNAME</td>
                            <td>@club.DEPARTMENT.DepartmentName</td>
                            <td>
                                @if (club.ApprovalStatusID == 1)
                                {
                                    <span class="status-pending">Pending</span>
                                }
                                else if (club.ApprovalStatusID == 2)
                                {
                                    <span class="status-approved">Approved</span>
                                }
                                else if (club.ApprovalStatusID == 3)
                                {
                                    <span class="status-rejected">Rejected</span>
                                }
                            </td>
                            <td>@club.TotalClubCommitteeSeats</td>
                            <td>@club.AvailableClubCommitteeSeats</td>
                            <td class="reason-col">
                                @if (!string.IsNullOrEmpty(rejectionReason))
                                {
                                    @rejectionReason
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <div class="pagination-container text-center mt-3">
            <span class="pagination-info">Page @Model.PageNumber of @Model.PageCount</span>
            <ul class="pagination">
                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" href="@Url.Action("ViewClubStatus", new { page = i, filter = ViewBag.Filter })">@i</a>
                    </li>
                }
            </ul>
        </div>
    </div>

    <!-- JavaScript for Filtering -->
    <!-- JavaScript for Read More Toggle -->
    <script>
    // Run when the DOM is fully loaded
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".read-more-toggle").forEach(function (btn) {
            btn.addEventListener("click", function (e) {
                e.preventDefault();

                var shortDesc = btn.parentElement.querySelector(".short-desc");
                var fullDesc = btn.parentElement.querySelector(".full-desc");

                if (fullDesc.classList.contains("d-none")) {
                    shortDesc.classList.add("d-none");
                    fullDesc.classList.remove("d-none");
                    btn.textContent = "Read less";
                } else {
                    fullDesc.classList.add("d-none");
                    shortDesc.classList.remove("d-none");
                    btn.textContent = "Read more";
                }
            });
        });
    });

    // Filter Function (Keep separate)
    function filterTable(status) {
        window.location.href = '@Url.Action("ViewClubStatus", "Mentor")' + '?filter=' + status;
    }
    </script>

</body>
</html>

@model WebApplication4.Models.USER

@{
    Layout = "~/Views/Shared/_HodLayout.cshtml";
    ViewBag.Title = "Add Mentor";
}

<h2 class="text-center mb-5">Add Mentor</h2>

@if (ViewBag.Errors != null)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewBag.Errors)
            {
                <li>@error</li>
            }
        </ul>
    </div>
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success text-center" id="successMessage">
        @TempData["SuccessMessage"]
    </div>
    <script>
        setTimeout(function () {
            document.getElementById("successMessage").style.display = "none";
        }, 3000);
    </script>
}

@using (Html.BeginForm("AddMentor", "HOD", FormMethod.Post, new { enctype = "multipart/form-data", id = "mentorForm" }))
{
    @Html.AntiForgeryToken()

    <div class="container-fluid">
        <div class="card mx-auto" style="width: 80%;">
            <div class="card-body">

                <!-- Row 1: Personal Information -->
                <div class="row g-3">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label">First Name</label>
                            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", id = "firstName", placeholder = "Enter First Name" })
                            <span class="text-danger" id="firstNameError"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label">Last Name</label>
                            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", id = "lastName", placeholder = "Enter Last Name" })
                            <span class="text-danger" id="lastNameError"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", id = "email", placeholder = "Enter Email Address" })
                            <span class="text-danger" id="emailError"></span>
                        </div>
                    </div>
                </div>

                <!-- Row 2: Contact & User Type -->
                <div class="row g-3 mt-2">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label">Mobile Number</label>
                            @Html.TextBoxFor(model => model.MobileNumber, new { @class = "form-control", id = "mobile", placeholder = "Enter Mobile Number" })
                            <span class="text-danger" id="mobileError"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label">WhatsApp Number</label>
                            @Html.TextBoxFor(model => model.WhatsAppNumber, new { @class = "form-control", id = "whatsapp", placeholder = "Enter WhatsApp Number" })
                            <span class="text-danger" id="whatsappError"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label">User Type</label>
                            @Html.DropDownListFor(model => model.UserType,
                                new SelectList(new List<string> { "Campus", "Open" }),
                                "Select User Type",
                                new { @class = "form-control" })
                        </div>
                    </div>
                </div>

                <!-- Row 3: Address Details -->
                <div class="row g-3 mt-2">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.Address, new { @class = "form-control", id = "address", placeholder = "Enter Address" })
                            <span class="text-danger" id="addressError"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.City, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.City, new { @class = "form-control", id = "city", placeholder = "Enter City" })
                            <span class="text-danger" id="cityError"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.State, new { @class = "form-label" })
                            @Html.DropDownListFor(model => model.State, new SelectList(new List<string> {
                                "Andhra Pradesh", "Arunachal Pradesh", "Assam", "Bihar", "Chhattisgarh", "Goa", "Gujarat",
                                "Haryana", "Himachal Pradesh", "Jharkhand", "Karnataka", "Kerala", "Madhya Pradesh",
                                "Maharashtra", "Manipur", "Meghalaya", "Mizoram", "Nagaland", "Odisha", "Punjab",
                                "Rajasthan", "Sikkim", "Tamil Nadu", "Telangana", "Tripura", "Uttar Pradesh",
                                "Uttarakhand", "West Bengal"
                            }), "Select State", new { @class = "form-control", id = "state" })
                            <span class="text-danger" id="stateError"></span>
                        </div>
                    </div>
                </div>

                <!-- Row 4: District, Pin Code & Subscription -->
                <div class="row g-3 mt-2">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.District, new { @class = "form-label" })
                            <select id="district" name="District" class="form-control">
                                <option value="">Select District</option>
                            </select>
                            <span class="text-danger" id="districtError"></span>
                        </div>
                        <script>
                            document.getElementById("DepartmentID").addEventListener("change", function () {
                                var departmentError = document.getElementById("departmentError");
                                if (this.value === "") {
                                    departmentError.textContent = "Please select a department.";
                                } else {
                                    departmentError.textContent = "";
                                }
                            });
                        </script>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label">Pin Code</label>
                            @Html.TextBoxFor(model => model.PinCode, new { @class = "form-control", id = "pincode", placeholder = "Enter Pin Code" })
                            <span class="text-danger" id="pincodeError"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label">Subscription Status</label>
                            @Html.DropDownListFor(model => model.SubscriptionStatus,
                                new SelectList(new List<string> { "Normal", "Premium" }),
                                "Select Subscription Status",
                                new { @class = "form-control" })
                        </div>
                    </div>
                </div>

                <!-- Row 5: User Role & Photo -->
                <div class="row g-3 mt-2">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label">User Role</label>
                            @Html.DropDownListFor(model => model.Userrole,
                                new SelectList(new List<string> { "Admin", "Mentor", "Student" }),
                                "Select User Role",
                                new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label">Photo Path</label>
                            <input type="file" name="Photo" class="form-control-file" id="photo" />
                            <span class="text-danger" id="photoError"></span>
                        </div>
                    </div>
                </div>

                <!-- Submit Button -->
                <div class="form-group text-center mt-3">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Add Mentor
                    </button>
                </div>

            </div>
        </div>
    </div>


}

<style>
    .container-fluid {
        max-width: 100vw;
        overflow-x: hidden;
    }

    .card {
        width: 100%;
        max-width: 100vw;
        margin: auto;
    }

    .row.g-2 {
        display: flex;
        flex-wrap: wrap;
    }

    .form-group {
        margin-bottom: 10px;
    }
</style>

<script>
    // State and District Mapping
    const districtsByState = {
        "Andhra Pradesh": ["Anantapur", "Chittoor", "East Godavari", "Guntur", "Krishna", "Kurnool", "Nellore", "Prakasam", "Srikakulam", "Visakhapatnam", "Vizianagaram", "West Godavari", "YSR Kadapa"],
        "Arunachal Pradesh": ["Tawang", "West Kameng", "East Kameng", "Papum Pare", "Kurung Kumey", "Kra Daadi", "Lower Subansiri", "Upper Subansiri", "West Siang", "East Siang", "Siang", "Upper Siang", "Lower Siang", "Dibang Valley", "Lower Dibang Valley", "Anjaw", "Lohit", "Changlang", "Tirap", "Longding"],
        "Assam": ["Baksa", "Barpeta", "Biswanath", "Bongaigaon", "Cachar", "Charaideo", "Chirang", "Darrang", "Dhemaji", "Dhubri", "Dibrugarh", "Goalpara", "Golaghat", "Hailakandi", "Hojai", "Jorhat", "Kamrup", "Kamrup Metropolitan", "Karbi Anglong", "Karimganj", "Kokrajhar", "Lakhimpur", "Majuli", "Morigaon", "Nagaon", "Nalbari", "Dima Hasao", "Sivasagar", "Sonitpur", "South Salmara-Mankachar", "Tinsukia", "Udalguri", "West Karbi Anglong"],
        "Bihar": ["Araria", "Arwal", "Aurangabad", "Banka", "Begusarai", "Bhagalpur", "Bhojpur", "Buxar", "Darbhanga", "East Champaran", "Gaya", "Gopalganj", "Jamui", "Jehanabad", "Kaimur", "Katihar", "Khagaria", "Kishanganj", "Lakhisarai", "Madhepura", "Madhubani", "Munger", "Muzaffarpur", "Nalanda", "Nawada", "Patna", "Purnia", "Rohtas", "Saharsa", "Samastipur", "Saran", "Sheikhpura", "Sheohar", "Sitamarhi", "Siwan", "Supaul", "Vaishali", "West Champaran"],
        "Chhattisgarh": ["Balod", "Baloda Bazar", "Balrampur", "Bastar", "Bemetara", "Bijapur", "Bilaspur", "Dantewada", "Dhamtari", "Durg", "Gariaband", "Janjgir-Champa", "Jashpur", "Kabirdham", "Kanker", "Kondagaon", "Korba", "Koriya", "Mahasamund", "Mungeli", "Narayanpur", "Raigarh", "Raipur", "Rajnandgaon", "Sukma", "Surajpur", "Surguja"],
        "Goa": ["North Goa", "South Goa"],
        "Gujarat": ["Ahmedabad", "Amreli", "Anand", "Aravalli", "Banaskantha", "Bharuch", "Bhavnagar", "Botad", "Chhota Udaipur", "Dahod", "Dang", "Devbhoomi Dwarka", "Gandhinagar", "Gir Somnath", "Jamnagar", "Junagadh", "Kheda", "Kutch", "Mahisagar", "Mehsana", "Morbi", "Narmada", "Navsari", "Panchmahal", "Patan", "Porbandar", "Rajkot", "Sabarkantha", "Surat", "Surendranagar", "Tapi", "Vadodara", "Valsad"],
        "Haryana": ["Ambala", "Bhiwani", "Charkhi Dadri", "Faridabad", "Fatehabad", "Gurugram", "Hisar", "Jhajjar", "Jind", "Kaithal", "Karnal", "Kurukshetra", "Mahendragarh", "Nuh", "Palwal", "Panchkula", "Panipat", "Rewari", "Rohtak", "Sirsa", "Sonipat", "Yamunanagar"],
        "Himachal Pradesh": ["Bilaspur", "Chamba", "Hamirpur", "Kangra", "Kinnaur", "Kullu", "Lahaul and Spiti", "Mandi", "Shimla", "Sirmaur", "Solan", "Una"],
        "Jharkhand": ["Bokaro", "Chatra", "Deoghar", "Dhanbad", "Dumka", "East Singhbhum", "Garhwa", "Giridih", "Godda", "Gumla", "Hazaribagh", "Jamtara", "Khunti", "Koderma", "Latehar", "Lohardaga", "Pakur", "Palamu", "Ramgarh", "Ranchi", "Sahebganj", "Seraikela Kharsawan", "Simdega", "West Singhbhum"],
        "Karnataka": ["Bagalkot", "Ballari", "Belagavi", "Bengaluru Rural", "Bengaluru Urban", "Bidar", "Chamarajanagar", "Chikkaballapur", "Chikkamagaluru", "Chitradurga", "Dakshina Kannada", "Davanagere", "Dharwad", "Gadag", "Hassan", "Haveri", "Kalaburagi", "Kodagu", "Kolar", "Koppal", "Mandya", "Mysuru", "Raichur", "Ramanagara", "Shivamogga", "Tumakuru", "Udupi", "Uttara Kannada", "Vijayapura", "Yadgir"],
        "Kerala": ["Alappuzha", "Ernakulam", "Idukki", "Kannur", "Kasaragod", "Kollam", "Kottayam", "Kozhikode", "Malappuram", "Palakkad", "Pathanamthitta", "Thiruvananthapuram", "Thrissur", "Wayanad"],
        "Madhya Pradesh": ["Agar Malwa", "Alirajpur", "Anuppur", "Ashoknagar", "Balaghat", "Barwani", "Betul", "Bhind", "Bhopal", "Burhanpur", "Chhatarpur", "Chhindwara", "Damoh", "Datia", "Dewas", "Dhar", "Dindori", "Guna", "Gwalior", "Harda", "Hoshangabad", "Indore", "Jabalpur", "Jhabua", "Katni", "Khandwa", "Khargone", "Mandla", "Mandsaur", "Morena", "Narsinghpur", "Neemuch", "Panna", "Raisen", "Rajgarh", "Ratlam", "Rewa", "Sagar", "Satna", "Sehore", "Seoni", "Shahdol", "Shajapur", "Sheopur", "Shivpuri", "Sidhi", "Singrauli", "Tikamgarh", "Ujjain", "Umaria", "Vidisha"],
        "Maharashtra": ["Ahmednagar", "Akola", "Amravati", "Aurangabad", "Beed", "Bhandara", "Buldhana",
            "Chandrapur", "Dhule", "Gadchiroli", "Gondia", "Hingoli", "Jalgaon", "Jalna", "Kolhapur",
            "Latur", "Mumbai City", "Mumbai Suburban", "Nagpur", "Nanded", "Nandurbar", "Nashik",
            "Osmanabad", "Palghar", "Parbhani", "Pune", "Raigad", "Ratnagiri", "Sangli", "Satara",
            "Sindhudurg", "Solapur", "Thane", "Wardha", "Washim", "Yavatmal"],
        "Manipur": ["Bishnupur", "Chandel", "Churachandpur", "Imphal East", "Imphal West", "Jiribam",
            "Kakching", "Kamjong", "Kangpokpi", "Noney", "Pherzawl", "Senapati", "Tamenglong",
            "Tengnoupal", "Thoubal", "Ukhrul"],
        "Meghalaya": ["East Garo Hills", "East Jaintia Hills", "East Khasi Hills", "North Garo Hills",
            "Ri Bhoi", "South Garo Hills", "South West Garo Hills", "South West Khasi Hills",
            "West Garo Hills", "West Jaintia Hills", "West Khasi Hills"],
        "Mizoram": ["Aizawl", "Champhai", "Hnahthial", "Khawzawl", "Kolasib", "Lawngtlai", "Lunglei",
            "Mamit", "Saiha", "Saitual", "Serchhip"],
        "Nagaland": ["Chümoukedima", "Dimapur", "Kiphire", "Kohima", "Longleng", "Mokokchung", "Mon",
            "Niuland", "Noklak", "Peren", "Phek", "Shamator", "Tseminyü", "Tuensang", "Wokha", "Zunheboto"],
        "Odisha": ["Angul", "Balangir", "Balasore", "Bargarh", "Bhadrak", "Boudh", "Cuttack", "Deogarh",
            "Dhenkanal", "Gajapati", "Ganjam", "Jagatsinghpur", "Jajpur", "Jharsuguda", "Kalahandi",
            "Kandhamal", "Kendrapara", "Kendujhar", "Khordha", "Koraput", "Malkangiri", "Mayurbhanj",
            "Nabarangpur", "Nayagarh", "Nuapada", "Puri", "Rayagada", "Sambalpur", "Subarnapur", "Sundargarh"],
        "Punjab": ["Amritsar", "Barnala", "Bathinda", "Faridkot", "Fatehgarh Sahib", "Fazilka", "Ferozepur",
            "Gurdaspur", "Hoshiarpur", "Jalandhar", "Kapurthala", "Ludhiana", "Malerkotla", "Mansa",
            "Moga", "Mohali", "Muktsar", "Nawanshahr", "Pathankot", "Patiala", "Rupnagar", "Sangrur", "Tarn Taran"],
        "Rajasthan": ["Ajmer", "Alwar", "Banswara", "Baran", "Barmer", "Bharatpur", "Bhilwara", "Bikaner",
            "Bundi", "Chittorgarh", "Churu", "Dausa", "Dholpur", "Dungarpur", "Hanumangarh",
            "Jaipur", "Jaisalmer", "Jalore", "Jhalawar", "Jhunjhunu", "Jodhpur", "Karauli",
            "Kota", "Nagaur", "Pali", "Pratapgarh", "Rajsamand", "Sawai Madhopur", "Sikar",
            "Sirohi", "Sri Ganganagar", "Tonk", "Udaipur"],
        "Sikkim": ["Gangtok", "Gyalshing", "Mangan", "Namchi", "Pakyong", "Soreng"],
        "Tamil Nadu": ["Ariyalur", "Chengalpattu", "Chennai", "Coimbatore", "Cuddalore", "Dharmapuri", "Dindigul",
            "Erode", "Kallakurichi", "Kanchipuram", "Kanyakumari", "Karur", "Krishnagiri", "Madurai",
            "Mayiladuthurai", "Nagapattinam", "Namakkal", "Nilgiris", "Perambalur", "Pudukkottai",
            "Ramanathapuram", "Ranipet", "Salem", "Sivaganga", "Tenkasi", "Thanjavur", "Theni",
            "Thoothukudi", "Tiruchirappalli", "Tirunelveli", "Tirupattur", "Tiruppur", "Tiruvallur",
            "Tiruvannamalai", "Tiruvarur", "Vellore", "Viluppuram", "Virudhunagar"],
        "Telangana": ["Adilabad", "Bhadradri Kothagudem", "Hanamkonda", "Hyderabad", "Jagitial", "Jangaon",
            "Jayashankar Bhupalpally", "Jogulamba Gadwal", "Kamareddy", "Karimnagar", "Khammam",
            "Komaram Bheem", "Mahabubabad", "Mahabubnagar", "Mancherial", "Medak", "Medchal–Malkajgiri",
            "Mulugu", "Nagarkurnool", "Nalgonda", "Narayanpet", "Nirmal", "Nizamabad", "Peddapalli",
            "Rajanna Sircilla", "Ranga Reddy", "Sangareddy", "Siddipet", "Suryapet", "Vikarabad",
            "Wanaparthy", "Warangal", "Yadadri Bhuvanagiri"],
        "Tripura": [
            "Dhalai", "Gomati", "Khowai", "North Tripura", "Sepahijala", "South Tripura", "Unakoti", "West Tripura"],
        "Uttar Pradesh": ["Agra", "Aligarh", "Ambedkar Nagar", "Amethi", "Amroha", "Auraiya", "Ayodhya",
            "Azamgarh", "Baghpat", "Bahraich", "Ballia", "Balrampur", "Banda", "Barabanki",
            "Bareilly", "Basti", "Bhadohi", "Bijnor", "Budaun", "Bulandshahr", "Chandauli",
            "Chitrakoot", "Deoria", "Etah", "Etawah", "Farrukhabad", "Fatehpur", "Firozabad",
            "Gautam Buddha Nagar", "Ghaziabad", "Ghazipur", "Gonda", "Gorakhpur", "Hamirpur",
            "Hapur", "Hardoi", "Hathras", "Jalaun", "Jaunpur", "Jhansi", "Kannauj", "Kanpur Dehat",
            "Kanpur Nagar", "Kasganj", "Kaushambi", "Kushinagar", "Lakhimpur Kheri", "Lalitpur",
            "Lucknow", "Maharajganj", "Mahoba", "Mainpuri", "Mathura", "Mau", "Meerut", "Mirzapur",
            "Moradabad", "Muzaffarnagar", "Pilibhit", "Pratapgarh", "Prayagraj", "Raebareli",
            "Rampur", "Saharanpur", "Sambhal", "Sant Kabir Nagar", "Shahjahanpur", "Shamli",
            "Shravasti", "Siddharthnagar", "Sitapur", "Sonbhadra", "Sultanpur", "Unnao", "Varanasi"],
        "Uttarakhand": ["Almora", "Bageshwar", "Chamoli", "Champawat", "Dehradun", "Haridwar", "Nainital", "Pauri Garhwal", "Pithoragarh", "Rudraprayag", "Tehri Garhwal", "Udham Singh Nagar", "Uttarkashi"],
        "West Bengal":
            ["Alipurduar", "Bankura", "Birbhum", "Cooch Behar", "Dakshin Dinajpur", "Darjeeling", "Hooghly", "Howrah", "Jalpaiguri", "Jhargram", "Kalimpong", "Kolkata", "Malda", "Murshidabad", "Nadia", "North 24 Parganas", "Paschim Bardhaman", "Paschim Medinipur", "Purba Bardhaman", "Purba Medinipur", "Purulia", "South 24 Parganas", "Uttar Dinajpur"]
    };

    // Function to populate states dropdown
    function populateStates() {
        const stateDropdown = document.getElementById("state");
        for (let state in districtsByState) {
            let option = document.createElement("option");
            option.value = state;
            option.textContent = state;
            stateDropdown.appendChild(option);
        }
    }

    // Function to populate districts based on selected state
    document.getElementById("state").addEventListener("change", function () {
        const state = this.value;
        const districtDropdown = document.getElementById("district");
        districtDropdown.innerHTML = `<option value="">--Select District--</option>`;

        if (state && districtsByState[state]) {
            districtsByState[state].forEach(district => {
                let option = document.createElement("option");
                option.value = district;
                option.textContent = district;
                districtDropdown.appendChild(option);
            });
        }
    });

    // Fetch pincode when district is selected
    document.getElementById("district").addEventListener("change", function () {
        const district = this.value;
        if (district) {
            fetch(`https://api.postalpincode.in/postoffice/${district}`)
                .then(response => response.json())
                .then(data => {
                    if (data && data[0].Status === "Success") {
                        document.getElementById("pincode").value = data[0].PostOffice[0].Pincode;
                    } else {
                        document.getElementById("pincode").value = "Not Found";
                    }
                })
                .catch(error => {
                    console.error("Error fetching pincode:", error);
                    document.getElementById("pincode").value = "Error";
                });
        }
    });

    // Initialize state dropdown on page load
    populateStates();
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        let form = document.getElementById("mentorForm");
        let firstNameInput = document.getElementById("firstName");
        let lastNameInput = document.getElementById("lastName");
        let addressInput = document.getElementById("address");
        let cityInput = document.getElementById("city");
        let emailInput = document.getElementById("email");
        let mobileInput = document.getElementById("mobile");
        let whatsappInput = document.getElementById("whatsapp");

        let emailPattern = /^[a-zA-Z0-9._%+-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
        let mobilePattern = /^[6-9]\d{9}$/;

        function validateField(input, errorElement, message) {
            if (input.value.trim() === "") {
                errorElement.innerText = message;
                input.classList.add("is-invalid");
                return false;
            } else {
                errorElement.innerText = "";
                input.classList.remove("is-invalid");
                return true;
            }
        }

        function validatePattern(input, errorElement, pattern, message) {
            if (!pattern.test(input.value.trim())) {
                errorElement.innerText = message;
                input.classList.add("is-invalid");
                return false;
            } else {
                errorElement.innerText = "";
                input.classList.remove("is-invalid");
                return true;
            }
        }

        firstNameInput.addEventListener("blur", () => validateField(firstNameInput, document.getElementById("firstNameError"), "First name is required."));
        lastNameInput.addEventListener("blur", () => validateField(lastNameInput, document.getElementById("lastNameError"), "Last name is required."));
        addressInput.addEventListener("blur", () => validateField(addressInput, document.getElementById("addressError"), "Address is required."));
        cityInput.addEventListener("blur", () => validateField(cityInput, document.getElementById("cityError"), "City is required."));
        emailInput.addEventListener("blur", () => validatePattern(emailInput, document.getElementById("emailError"), gmailPattern, "Please enter a valid Gmail address (e.g., user@gmail.com)."));
        mobileInput.addEventListener("blur", () => validatePattern(mobileInput, document.getElementById("mobileError"), mobilePattern, "Enter a valid 10-digit mobile number (starting with 6-9)."));

        whatsappInput.addEventListener("blur", function () {
            if (whatsappInput.value.trim() !== "") {
                validatePattern(whatsappInput, document.getElementById("whatsappError"), mobilePattern, "Enter a valid 10-digit WhatsApp number.");
            } else {
                document.getElementById("whatsappError").innerText = "";
                whatsappInput.classList.remove("is-invalid");
            }
        });

        form.addEventListener("submit", function (event) {
            let isValid = true;

            let firstNameValid = validateField(firstNameInput, document.getElementById("firstNameError"), "First name is required.");
            let lastNameValid = validateField(lastNameInput, document.getElementById("lastNameError"), "Last name is required.");
            let addressValid = validateField(addressInput, document.getElementById("addressError"), "Address is required.");
            let cityValid = validateField(cityInput, document.getElementById("cityError"), "City is required.");
            let emailValid = validatePattern(emailInput, document.getElementById("emailError"), gmailPattern, "Please enter a valid Gmail address (e.g., user@gmail.com).");
            let mobileValid = validatePattern(mobileInput, document.getElementById("mobileError"), mobilePattern, "Enter a valid 10-digit mobile number (starting with 6-9).");

            let whatsappValid = true;
            if (whatsappInput.value.trim() !== "") {
                whatsappValid = validatePattern(whatsappInput, document.getElementById("whatsappError"), mobilePattern, "Enter a valid 10-digit WhatsApp number.");
            }

            isValid = firstNameValid && lastNameValid && addressValid && cityValid && emailValid && mobileValid && whatsappValid;

            if (!isValid) {
                event.preventDefault();
            }
        });
    });
</script>

<script>
    document.getElementById("universityDropdown").addEventListener("change", function () {
        var universityId = this.value;
        var universityError = document.getElementById("universityError");
        var departmentDropdown = document.getElementById("departmentDropdown");
        var departmentError = document.getElementById("departmentError");

        if (universityId === "") {
            universityError.textContent = "Please select a university.";
            departmentDropdown.innerHTML = '<option value="">Select Department</option>';
            return;
        } else {
            universityError.textContent = "";
        }

        fetch(/Admin/GetActiveDepartments ? universityId = $ : { universityId })
            .then(response => response.json())
            .then(data => {
                departmentDropdown.innerHTML = '<option value="">Select Department</option>';
                data.forEach(department => {
                    var option = document.createElement("option");
                    option.value = department.DepartmentID;
                    option.textContent = department.DepartmentName;
                    departmentDropdown.appendChild(option);
                });
            })
            .catch(error => console.error('Error loading departments:', error));
    });

    document.getElementById("departmentDropdown").addEventListener("change", function () {
        var departmentError = document.getElementById("departmentError");
        if (this.value === "") {
            departmentError.textContent = "Please select a department.";
        } else {
            departmentError.textContent = "";
        }
    });
</script>

<!-- Photo Validation Script -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        let form = document.getElementById("mentorForm");
        let photoInput = document.getElementById("photo");
        let photoError = document.getElementById("photoError");

        // Allowed file types
        const allowedTypes = ["image/jpeg", "image/png"];
        // Maximum file size in bytes (5MB)
        const maxSize = 1 * 1024 * 1024; // 5MB in bytes

        // Function to validate the photo
        function validatePhoto() {
            let isValid = true;
            photoError.textContent = "";

            if (!photoInput.files || photoInput.files.length === 0) {
                photoError.textContent = "Please upload a photo.";
                isValid = false;
            } else {
                const file = photoInput.files[0];

                // Validate file type
                if (!allowedTypes.includes(file.type)) {
                    photoError.textContent = "Only JPEG or PNG images are allowed.";
                    isValid = false;
                }

                // Validate file size
                if (file.size > maxSize) {
                    photoError.textContent = "File size must be less than 1MB.";
                    isValid = false;
                }
            }

            return isValid;
        }

        // Validate on change (when user selects a file)
        photoInput.addEventListener("change", function () {
            validatePhoto();
        });

        // Validate on form submission
        form.addEventListener("submit", function (event) {
            const isPhotoValid = validatePhoto();
            if (!isPhotoValid) {
                event.preventDefault();
            }
        });
    });
</script>
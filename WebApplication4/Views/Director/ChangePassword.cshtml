@model WebApplication4.Models.ChangePasswordViewModel
@{
    Layout = "~/Views/Shared/DirectorLayout.cshtml";
    ViewBag.Title = "Change Password";
}

<div class="container d-flex justify-content-center align-items-center mt-5">
    <div class="card shadow-lg border-0 rounded-4" style="max-width: 500px; width: 100%;">
        <div class="card-body p-5">
            <h3 class="text-center mb-4" style="font-weight:600; color:#333;">🔐 Change Password</h3>

            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success text-center rounded-3">
                    @TempData["Success"]
                </div>
            }

            @Html.ValidationSummary(true, "", new { @class = "alert alert-danger rounded-3" })

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-group mb-3">
                    @Html.LabelFor(m => m.CurrentPassword, new { @class = "form-label fw-bold" })
                    <div class="input-group">
                        <span class="input-group-text bg-light border-0"><i class="fas fa-lock"></i></span>
                        @Html.PasswordFor(m => m.CurrentPassword, new { @class = "form-control rounded-end" })
                    </div>
                    @Html.ValidationMessageFor(m => m.CurrentPassword, "", new { @class = "text-danger small" })
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(m => m.NewPassword, new { @class = "form-label fw-bold" })
                    <div class="input-group">
                        <span class="input-group-text bg-light border-0"><i class="fas fa-key"></i></span>
                        @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control rounded-end" })
                    </div>
                    @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger small" })
                </div>

                <div class="form-group mb-4">
                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "form-label fw-bold" })
                    <div class="input-group">
                        <span class="input-group-text bg-light border-0"><i class="fas fa-check-circle"></i></span>
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control rounded-end" })
                    </div>
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger small" })
                </div>

                <button type="submit" class="btn w-100 text-white fw-bold py-2 rounded-3"
                        style="background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);">
                    Update Password
                </button>
            }
        </div>
    </div>
</div>
